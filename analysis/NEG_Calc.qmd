---
title: "Novel Exploration Growth Analysis in Elevated Plus Maze"
author: "Matt Zelko"
format: 
  html:
    toc: true
    toc-depth: 2
    number-sections: true
    code-fold: true
    code-summary: "Show code"
---

```{r setup, include=FALSE}
# Load necessary packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(readxl)
library(dbscan)    # For center detection algorithm
library(data.table)
library(purrr)
```

# Novel Exploration Growth in Elevated Plus Maze

This document provides a streamlined workflow for preprocessing Elevated Plus Maze (EPM) data and calculating Novel Exploration Growth (NEG) metrics. NEG tracks the first visit to discrete areas of the maze over time, capturing both exploratory and avoidance behaviors.

## Test Trial Data Structure Overview

The test trial data file has the following structure:

1.  Metadata for the test trial (rows 32-35):
    -   RatID
    -   Diet
    -   Strain
    -   Treatment Condition
2.  Data Structure:
    -   Column headers are in row 37
    -   Time series data starts from row 39
    -   Zone columns for Centre, Open arms and Closed arms

## Step 1: Load and Preprocess Data

The first step is to load the data files and run the preprocessing functions:

```{r load_preprocess}
# Load preprocessing functions
# Handle both running from root directory and from analysis/ directory
if (file.exists("R/preprocess.R")) {
  source("R/preprocess.R")
} else if (file.exists("../R/preprocess.R")) {
  source("../R/preprocess.R")
} else {
  stop("Cannot find preprocess.R. Please ensure you're running from the repository root or analysis directory.")
}
```

# Example usage - load a single file
```{r load_single_file}
# Replace with your file path
# Handle both running from root directory and from analysis/ directory
if (file.exists("test_data/NEG_Test_1.xlsx")) {
  file_path <- "test_data/NEG_Test_1.xlsx"
} else if (file.exists("../test_data/NEG_Test_1.xlsx")) {
  file_path <- "../test_data/NEG_Test_1.xlsx"
} else {
  stop("Cannot find test data. Please ensure test_data/NEG_Test_1.xlsx exists.")
}

# Read and preprocess the data file
trials_data <- read_and_clean_data(file_path)

# Examine the structure of the preprocessed data
glimpse(trials_data)

# Examine the time series data
glimpse(trials_data$data[[1]])
```

## Step 2: Unnest Data for Analysis

First, we need to unnest the data structure for further analysis:

```{r unnest_data}
# Function to unnest data for plotting and analysis
unnest_trials <- function(nested_data) {
  nested_data %>%
    unnest(data) %>%
    group_by(filename, RatID, Diet, Strain, Treatment)
}

# Unnest the trials data for use in subsequent steps
trials_data_unnested <- unnest_trials(trials_data)
```

## Step 3: Visualize Raw and Corrected Trajectories (Optional)

The preprocessing includes center shift correction to normalize coordinates around (0,0). We can visualize this to verify the correction:

```{r visualize_trajectory}
#| warning: false
#| message: false
# Plot original vs shifted coordinates
ggplot(trials_data_unnested) +
  # Original coordinates
  geom_path(aes(x = X, y = Y), color = "grey", alpha = 0.5) +
  # Corrected coordinates
  geom_path(aes(x = x_m, y = y_m), color = "blue", alpha = 0.7) +
  # Origin point
  geom_point(aes(x = 0, y = 0), color = "red", size = 2) +
  coord_fixed() +
  theme_minimal() +
  labs(title = "Original vs. Corrected Trajectory",
       subtitle = "Grey = Original, Blue = Corrected, Red = Origin")
```

## Step 4: Create Grid for Exploration Analysis

We need to create a grid of discrete areas to track where the animal has explored:

::: {.callout-warning}
## Warning
Creating a grid using only one sample will result in a grid that only covers the area of the sample. This will result in a grid that is not representative of the entire maze.
:::

```{r create_grid}
# Unnest data and create grid
arm_grids <- create_complete_arm_grids(trials_data_unnested)
```

## Step 5: Visualize the Grid

The grid is created by creating a grid for each arm type, and then combining them into a single grid. As noted, this is not ideal as we are only using one sample to create the grid.

```{r visualize_grid}
# Plot the created grid bands for each arm type
ggplot() +
  # For open arms (vertical bands)
  geom_rect(data = arm_grids$data[[1]], 
            aes(xmin = x_min, xmax = x_max,
                ymin = depth_start, ymax = depth_end),
            fill = "lightblue", color = "darkgrey", alpha = 0.3) +
  # For closed arms (horizontal bands)
  geom_rect(data = arm_grids$data[[2]], 
            aes(xmin = depth_start, xmax = depth_end,
                ymin = y_min, ymax = y_max),
            fill = "lightgreen", color = "darkgrey", alpha = 0.3) +
  # Add points to show actual movement data
  geom_point(data = trials_data_unnested %>% filter(InOpen == 1 | InClosed == 1), 
             aes(x = x_m, y = y_m, color = factor(InOpen)), 
             alpha = 0.3, size = 0.5) +
  coord_equal() +
  scale_color_manual(values = c("red", "blue"), 
                    labels = c("Closed Arm", "Open Arm"),
                    name = "Location") +
  labs(title = "Grid Bands by Arm Type",
       x = "X Position (cm)",
       y = "Y Position (cm)") +
  theme_minimal()
```

## Step 6: Calculate Novel Exploration Growth

```{r calculate_exploration}
# Prepare data for exploration calculation
trials_with_exploration <- trials_data %>%
  # Convert data list to data frame and add rounded coordinates
  mutate(data2 = map(data, ~as.data.frame(.))) %>%
  mutate(data2 = map(data2, ~mutate(., x_mr = round(x_m), y_mr = round(y_m)))) %>%
  # Calculate exploration for each trial
  mutate(exploration_data = map(data2, ~calculate_grid_exploration(., arm_grids)))
```

## Step 7: Visualize Novel Exploration Growth

This plot shows a rodent who quickly explored the closed arms, whilst waiting to explore the open arms til later in the trial. This indicates a high anxiety state.

```{r plot_exploration}
# Plot exploration percentage over time by arm type
ggplot(trials_with_exploration$exploration_data[[1]], 
       aes(x = Time, y = exploration_percentage, color = grid_type)) +
  geom_line() +
  theme_minimal() +
  labs(title = "Novel Exploration Growth Over Time",
       x = "Time (s)",
       y = "Percentage of Grid Squares Explored",
       color = "Arm Type") +
  ylim(0, 100)
```



# Process Multiple Files
## Multiple File Processing

For processing multiple files, the updated approach uses a **combined grid strategy** to ensure consistent grid boundaries across all trials:

**Combined Grid Approach Benefits:**

1. **Consistent Comparisons**: All trials use identical grid boundaries
2. **Fair Percentages**: Same number of grid squares across trials  
3. **Robust Statistics**: Valid statistical comparisons between trials
4. **Recentered Coordinates**: Grid based on all recentered data combined

```{r process_multiple_files}
# User-configurable parameters
file_pattern <- "^NEG_Test.*\\.xlsx$"  # Adjust this pattern to match your files

# Determine data folder path based on working directory
if (file.exists("test_data")) {
  data_path <- "test_data"
} else if (file.exists("../test_data")) {
  data_path <- "../test_data"
} else {
  stop("Cannot find test_data directory.")
}

# Process files with combined grid approach
# This ensures all trials use the same grid boundaries for fair comparison
all_exploration_data <- process_multiple_files(data_path, file_pattern)

# Check the master grid summary
get_grid_summary(all_exploration_data)
```

```{r visualize_master_grid}
# Visualize the master grid used across all trials
plot_master_grid(all_exploration_data)
```

## Step 8: Summarize Exploration by Groups

If you have multiple trials with different conditions, you can create summary visualizations:

```{r summarize_exploration}
# Create summary data
exploration_summary <- all_exploration_data %>%
  group_by(Diet, Strain, grid_type, Time) %>%
  summarise(
    mean_exploration_percentage = mean(exploration_percentage), 
    sd_exploration_percentage = sd(exploration_percentage),
    .groups = 'drop'
  )
```

## Visualise Exploration by Group per Arm Type

The plot below shows that the Control group explores the closed arms rapidly and completely, and the open arms to a lesser extent and only after a long delay. Conversely, the Experimental group explores in an arm agnostic manner, indicating lower anxiety.**

```{r plot_summary}
# Plot summary
ggplot(exploration_summary %>% filter(grid_type != "total")) +
  geom_line(aes(x = Time, y = mean_exploration_percentage, 
                color = grid_type, 
                group = interaction(Diet, Strain, grid_type)), linewidth = 1) +
  geom_ribbon(aes(x = Time, 
                 ymin = mean_exploration_percentage - sd_exploration_percentage, 
                 ymax = mean_exploration_percentage + sd_exploration_percentage, 
                 fill = grid_type), linetype = "dashed", linewidth = 0.5, alpha = 0.2) +
  scale_color_discrete(name = "Arm Type") +
  scale_fill_discrete(name = "Arm Type") +
  labs(title = "Novel Exploration Growth by Group",
       x = "Time (s)",
       y = "NEG (%)") +
  facet_grid(Diet ~ Strain) +
  theme_minimal()
```

## Visualise Exploration by Group per Arm Type for each rodent

```{r plot traces}
# Plot traces for each group
ggplot(all_exploration_data %>% filter(grid_type != "total")) +
  geom_line(aes(x = Time, y = exploration_percentage, 
                color = grid_type, 
                group = interaction(RatID, grid_type))) +
  scale_color_discrete(name = "Arm Type") +
  labs(title = "NEG Traces by Group",
       x = "Time (s)",
       y = "NEG (%)") +
  facet_grid(Diet ~ RatID) +
  theme_minimal()
```